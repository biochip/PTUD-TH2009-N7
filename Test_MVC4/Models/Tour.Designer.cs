//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Test_MVC4.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TRAVEL_PTUDEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TRAVEL_PTUDEntities object using the connection string found in the 'TRAVEL_PTUDEntities' section of the application configuration file.
        /// </summary>
        public TRAVEL_PTUDEntities() : base("name=TRAVEL_PTUDEntities", "TRAVEL_PTUDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TRAVEL_PTUDEntities object.
        /// </summary>
        public TRAVEL_PTUDEntities(string connectionString) : base(connectionString, "TRAVEL_PTUDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TRAVEL_PTUDEntities object.
        /// </summary>
        public TRAVEL_PTUDEntities(EntityConnection connection) : base(connection, "TRAVEL_PTUDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TOUR> TOURs
        {
            get
            {
                if ((_TOURs == null))
                {
                    _TOURs = base.CreateObjectSet<TOUR>("TOURs");
                }
                return _TOURs;
            }
        }
        private ObjectSet<TOUR> _TOURs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TOURs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTOURs(TOUR tOUR)
        {
            base.AddObject("TOURs", tOUR);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pnLOAITOUR">No Metadata Documentation available.</param>
        /// <param name="pdNGAYBATDAU">No Metadata Documentation available.</param>
        /// <param name="pdNGAYKETTHUC">No Metadata Documentation available.</param>
        /// <param name="pnDIEMBATDAU">No Metadata Documentation available.</param>
        /// <param name="pnOFFSET">No Metadata Documentation available.</param>
        /// <param name="pnLIMIT">No Metadata Documentation available.</param>
        /// <param name="pnSORT">No Metadata Documentation available.</param>
        /// <param name="pnDIRECT">No Metadata Documentation available.</param>
        public ObjectResult<TOUR> TOUR_LISTOFTAB(Nullable<global::System.Int32> pnLOAITOUR, Nullable<global::System.DateTime> pdNGAYBATDAU, Nullable<global::System.DateTime> pdNGAYKETTHUC, Nullable<global::System.Int32> pnDIEMBATDAU, Nullable<global::System.Int32> pnOFFSET, Nullable<global::System.Int32> pnLIMIT, Nullable<global::System.Int32> pnSORT, Nullable<global::System.Int32> pnDIRECT)
        {
            ObjectParameter pnLOAITOURParameter;
            if (pnLOAITOUR.HasValue)
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", pnLOAITOUR);
            }
            else
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", typeof(global::System.Int32));
            }
    
            ObjectParameter pdNGAYBATDAUParameter;
            if (pdNGAYBATDAU.HasValue)
            {
                pdNGAYBATDAUParameter = new ObjectParameter("pdNGAYBATDAU", pdNGAYBATDAU);
            }
            else
            {
                pdNGAYBATDAUParameter = new ObjectParameter("pdNGAYBATDAU", typeof(global::System.DateTime));
            }
    
            ObjectParameter pdNGAYKETTHUCParameter;
            if (pdNGAYKETTHUC.HasValue)
            {
                pdNGAYKETTHUCParameter = new ObjectParameter("pdNGAYKETTHUC", pdNGAYKETTHUC);
            }
            else
            {
                pdNGAYKETTHUCParameter = new ObjectParameter("pdNGAYKETTHUC", typeof(global::System.DateTime));
            }
    
            ObjectParameter pnDIEMBATDAUParameter;
            if (pnDIEMBATDAU.HasValue)
            {
                pnDIEMBATDAUParameter = new ObjectParameter("pnDIEMBATDAU", pnDIEMBATDAU);
            }
            else
            {
                pnDIEMBATDAUParameter = new ObjectParameter("pnDIEMBATDAU", typeof(global::System.Int32));
            }
    
            ObjectParameter pnOFFSETParameter;
            if (pnOFFSET.HasValue)
            {
                pnOFFSETParameter = new ObjectParameter("pnOFFSET", pnOFFSET);
            }
            else
            {
                pnOFFSETParameter = new ObjectParameter("pnOFFSET", typeof(global::System.Int32));
            }
    
            ObjectParameter pnLIMITParameter;
            if (pnLIMIT.HasValue)
            {
                pnLIMITParameter = new ObjectParameter("pnLIMIT", pnLIMIT);
            }
            else
            {
                pnLIMITParameter = new ObjectParameter("pnLIMIT", typeof(global::System.Int32));
            }
    
            ObjectParameter pnSORTParameter;
            if (pnSORT.HasValue)
            {
                pnSORTParameter = new ObjectParameter("pnSORT", pnSORT);
            }
            else
            {
                pnSORTParameter = new ObjectParameter("pnSORT", typeof(global::System.Int32));
            }
    
            ObjectParameter pnDIRECTParameter;
            if (pnDIRECT.HasValue)
            {
                pnDIRECTParameter = new ObjectParameter("pnDIRECT", pnDIRECT);
            }
            else
            {
                pnDIRECTParameter = new ObjectParameter("pnDIRECT", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TOUR>("TOUR_LISTOFTAB", pnLOAITOURParameter, pdNGAYBATDAUParameter, pdNGAYKETTHUCParameter, pnDIEMBATDAUParameter, pnOFFSETParameter, pnLIMITParameter, pnSORTParameter, pnDIRECTParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="pnLOAITOUR">No Metadata Documentation available.</param>
        /// <param name="pdNGAYBATDAU">No Metadata Documentation available.</param>
        /// <param name="pdNGAYKETTHUC">No Metadata Documentation available.</param>
        /// <param name="pnDIEMBATDAU">No Metadata Documentation available.</param>
        /// <param name="pnOFFSET">No Metadata Documentation available.</param>
        /// <param name="pnLIMIT">No Metadata Documentation available.</param>
        /// <param name="pnSORT">No Metadata Documentation available.</param>
        /// <param name="pnDIRECT">No Metadata Documentation available.</param>
        public ObjectResult<TOUR> TOUR_LISTOFTAB(Nullable<global::System.Int32> pnLOAITOUR, Nullable<global::System.DateTime> pdNGAYBATDAU, Nullable<global::System.DateTime> pdNGAYKETTHUC, Nullable<global::System.Int32> pnDIEMBATDAU, Nullable<global::System.Int32> pnOFFSET, Nullable<global::System.Int32> pnLIMIT, Nullable<global::System.Int32> pnSORT, Nullable<global::System.Int32> pnDIRECT, MergeOption mergeOption)
        {
            ObjectParameter pnLOAITOURParameter;
            if (pnLOAITOUR.HasValue)
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", pnLOAITOUR);
            }
            else
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", typeof(global::System.Int32));
            }
    
            ObjectParameter pdNGAYBATDAUParameter;
            if (pdNGAYBATDAU.HasValue)
            {
                pdNGAYBATDAUParameter = new ObjectParameter("pdNGAYBATDAU", pdNGAYBATDAU);
            }
            else
            {
                pdNGAYBATDAUParameter = new ObjectParameter("pdNGAYBATDAU", typeof(global::System.DateTime));
            }
    
            ObjectParameter pdNGAYKETTHUCParameter;
            if (pdNGAYKETTHUC.HasValue)
            {
                pdNGAYKETTHUCParameter = new ObjectParameter("pdNGAYKETTHUC", pdNGAYKETTHUC);
            }
            else
            {
                pdNGAYKETTHUCParameter = new ObjectParameter("pdNGAYKETTHUC", typeof(global::System.DateTime));
            }
    
            ObjectParameter pnDIEMBATDAUParameter;
            if (pnDIEMBATDAU.HasValue)
            {
                pnDIEMBATDAUParameter = new ObjectParameter("pnDIEMBATDAU", pnDIEMBATDAU);
            }
            else
            {
                pnDIEMBATDAUParameter = new ObjectParameter("pnDIEMBATDAU", typeof(global::System.Int32));
            }
    
            ObjectParameter pnOFFSETParameter;
            if (pnOFFSET.HasValue)
            {
                pnOFFSETParameter = new ObjectParameter("pnOFFSET", pnOFFSET);
            }
            else
            {
                pnOFFSETParameter = new ObjectParameter("pnOFFSET", typeof(global::System.Int32));
            }
    
            ObjectParameter pnLIMITParameter;
            if (pnLIMIT.HasValue)
            {
                pnLIMITParameter = new ObjectParameter("pnLIMIT", pnLIMIT);
            }
            else
            {
                pnLIMITParameter = new ObjectParameter("pnLIMIT", typeof(global::System.Int32));
            }
    
            ObjectParameter pnSORTParameter;
            if (pnSORT.HasValue)
            {
                pnSORTParameter = new ObjectParameter("pnSORT", pnSORT);
            }
            else
            {
                pnSORTParameter = new ObjectParameter("pnSORT", typeof(global::System.Int32));
            }
    
            ObjectParameter pnDIRECTParameter;
            if (pnDIRECT.HasValue)
            {
                pnDIRECTParameter = new ObjectParameter("pnDIRECT", pnDIRECT);
            }
            else
            {
                pnDIRECTParameter = new ObjectParameter("pnDIRECT", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TOUR>("TOUR_LISTOFTAB", mergeOption, pnLOAITOURParameter, pdNGAYBATDAUParameter, pdNGAYKETTHUCParameter, pnDIEMBATDAUParameter, pnOFFSETParameter, pnLIMITParameter, pnSORTParameter, pnDIRECTParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pnLOAITOUR">No Metadata Documentation available.</param>
        public ObjectResult<TOUR> testPro(Nullable<global::System.Int32> pnLOAITOUR)
        {
            ObjectParameter pnLOAITOURParameter;
            if (pnLOAITOUR.HasValue)
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", pnLOAITOUR);
            }
            else
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TOUR>("testPro", pnLOAITOURParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="pnLOAITOUR">No Metadata Documentation available.</param>
        public ObjectResult<TOUR> testPro(Nullable<global::System.Int32> pnLOAITOUR, MergeOption mergeOption)
        {
            ObjectParameter pnLOAITOURParameter;
            if (pnLOAITOUR.HasValue)
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", pnLOAITOUR);
            }
            else
            {
                pnLOAITOURParameter = new ObjectParameter("pnLOAITOUR", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TOUR>("testPro", mergeOption, pnLOAITOURParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TRAVEL_PTUDModel", Name="TOUR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TOUR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TOUR object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tENTOUR">Initial value of the TENTOUR property.</param>
        /// <param name="lOAITOUR">Initial value of the LOAITOUR property.</param>
        /// <param name="dIEMBATDAU">Initial value of the DIEMBATDAU property.</param>
        /// <param name="nGAYBATDAU">Initial value of the NGAYBATDAU property.</param>
        /// <param name="nGAYKETTHUC">Initial value of the NGAYKETTHUC property.</param>
        /// <param name="bATDAUDANGKY">Initial value of the BATDAUDANGKY property.</param>
        /// <param name="kETTHUCDANGKY">Initial value of the KETTHUCDANGKY property.</param>
        /// <param name="sOVENGUOILON">Initial value of the SOVENGUOILON property.</param>
        /// <param name="gIANGUOILON">Initial value of the GIANGUOILON property.</param>
        /// <param name="sOVETREEM">Initial value of the SOVETREEM property.</param>
        /// <param name="gIATREEM">Initial value of the GIATREEM property.</param>
        /// <param name="sOVETRENHO">Initial value of the SOVETRENHO property.</param>
        /// <param name="gIATRENHO">Initial value of the GIATRENHO property.</param>
        /// <param name="sOVEEMBE">Initial value of the SOVEEMBE property.</param>
        /// <param name="gIAEMBE">Initial value of the GIAEMBE property.</param>
        /// <param name="gIADAILY">Initial value of the GIADAILY property.</param>
        /// <param name="dONVITIEN">Initial value of the DONVITIEN property.</param>
        /// <param name="vANCHUYEN">Initial value of the VANCHUYEN property.</param>
        /// <param name="kHACHSAN">Initial value of the KHACHSAN property.</param>
        /// <param name="mAYBAY">Initial value of the MAYBAY property.</param>
        /// <param name="tRANGTHAI">Initial value of the TRANGTHAI property.</param>
        public static TOUR CreateTOUR(global::System.Int32 id, global::System.String tENTOUR, global::System.Int32 lOAITOUR, global::System.Int32 dIEMBATDAU, global::System.DateTime nGAYBATDAU, global::System.DateTime nGAYKETTHUC, global::System.DateTime bATDAUDANGKY, global::System.DateTime kETTHUCDANGKY, global::System.Int32 sOVENGUOILON, global::System.Double gIANGUOILON, global::System.Int32 sOVETREEM, global::System.Double gIATREEM, global::System.Int32 sOVETRENHO, global::System.Double gIATRENHO, global::System.Int32 sOVEEMBE, global::System.Double gIAEMBE, global::System.Double gIADAILY, global::System.String dONVITIEN, global::System.Boolean vANCHUYEN, global::System.Boolean kHACHSAN, global::System.Boolean mAYBAY, global::System.String tRANGTHAI)
        {
            TOUR tOUR = new TOUR();
            tOUR.ID = id;
            tOUR.TENTOUR = tENTOUR;
            tOUR.LOAITOUR = lOAITOUR;
            tOUR.DIEMBATDAU = dIEMBATDAU;
            tOUR.NGAYBATDAU = nGAYBATDAU;
            tOUR.NGAYKETTHUC = nGAYKETTHUC;
            tOUR.BATDAUDANGKY = bATDAUDANGKY;
            tOUR.KETTHUCDANGKY = kETTHUCDANGKY;
            tOUR.SOVENGUOILON = sOVENGUOILON;
            tOUR.GIANGUOILON = gIANGUOILON;
            tOUR.SOVETREEM = sOVETREEM;
            tOUR.GIATREEM = gIATREEM;
            tOUR.SOVETRENHO = sOVETRENHO;
            tOUR.GIATRENHO = gIATRENHO;
            tOUR.SOVEEMBE = sOVEEMBE;
            tOUR.GIAEMBE = gIAEMBE;
            tOUR.GIADAILY = gIADAILY;
            tOUR.DONVITIEN = dONVITIEN;
            tOUR.VANCHUYEN = vANCHUYEN;
            tOUR.KHACHSAN = kHACHSAN;
            tOUR.MAYBAY = mAYBAY;
            tOUR.TRANGTHAI = tRANGTHAI;
            return tOUR;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TENTOUR
        {
            get
            {
                return _TENTOUR;
            }
            set
            {
                if (_TENTOUR != value)
                {
                    OnTENTOURChanging(value);
                    ReportPropertyChanging("TENTOUR");
                    _TENTOUR = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TENTOUR");
                    OnTENTOURChanged();
                }
            }
        }
        private global::System.String _TENTOUR;
        partial void OnTENTOURChanging(global::System.String value);
        partial void OnTENTOURChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LOAITOUR
        {
            get
            {
                return _LOAITOUR;
            }
            set
            {
                if (_LOAITOUR != value)
                {
                    OnLOAITOURChanging(value);
                    ReportPropertyChanging("LOAITOUR");
                    _LOAITOUR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LOAITOUR");
                    OnLOAITOURChanged();
                }
            }
        }
        private global::System.Int32 _LOAITOUR;
        partial void OnLOAITOURChanging(global::System.Int32 value);
        partial void OnLOAITOURChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DIEMBATDAU
        {
            get
            {
                return _DIEMBATDAU;
            }
            set
            {
                if (_DIEMBATDAU != value)
                {
                    OnDIEMBATDAUChanging(value);
                    ReportPropertyChanging("DIEMBATDAU");
                    _DIEMBATDAU = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DIEMBATDAU");
                    OnDIEMBATDAUChanged();
                }
            }
        }
        private global::System.Int32 _DIEMBATDAU;
        partial void OnDIEMBATDAUChanging(global::System.Int32 value);
        partial void OnDIEMBATDAUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NGAYBATDAU
        {
            get
            {
                return _NGAYBATDAU;
            }
            set
            {
                if (_NGAYBATDAU != value)
                {
                    OnNGAYBATDAUChanging(value);
                    ReportPropertyChanging("NGAYBATDAU");
                    _NGAYBATDAU = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NGAYBATDAU");
                    OnNGAYBATDAUChanged();
                }
            }
        }
        private global::System.DateTime _NGAYBATDAU;
        partial void OnNGAYBATDAUChanging(global::System.DateTime value);
        partial void OnNGAYBATDAUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NGAYKETTHUC
        {
            get
            {
                return _NGAYKETTHUC;
            }
            set
            {
                if (_NGAYKETTHUC != value)
                {
                    OnNGAYKETTHUCChanging(value);
                    ReportPropertyChanging("NGAYKETTHUC");
                    _NGAYKETTHUC = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NGAYKETTHUC");
                    OnNGAYKETTHUCChanged();
                }
            }
        }
        private global::System.DateTime _NGAYKETTHUC;
        partial void OnNGAYKETTHUCChanging(global::System.DateTime value);
        partial void OnNGAYKETTHUCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BATDAUDANGKY
        {
            get
            {
                return _BATDAUDANGKY;
            }
            set
            {
                if (_BATDAUDANGKY != value)
                {
                    OnBATDAUDANGKYChanging(value);
                    ReportPropertyChanging("BATDAUDANGKY");
                    _BATDAUDANGKY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BATDAUDANGKY");
                    OnBATDAUDANGKYChanged();
                }
            }
        }
        private global::System.DateTime _BATDAUDANGKY;
        partial void OnBATDAUDANGKYChanging(global::System.DateTime value);
        partial void OnBATDAUDANGKYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime KETTHUCDANGKY
        {
            get
            {
                return _KETTHUCDANGKY;
            }
            set
            {
                if (_KETTHUCDANGKY != value)
                {
                    OnKETTHUCDANGKYChanging(value);
                    ReportPropertyChanging("KETTHUCDANGKY");
                    _KETTHUCDANGKY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KETTHUCDANGKY");
                    OnKETTHUCDANGKYChanged();
                }
            }
        }
        private global::System.DateTime _KETTHUCDANGKY;
        partial void OnKETTHUCDANGKYChanging(global::System.DateTime value);
        partial void OnKETTHUCDANGKYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MOTA
        {
            get
            {
                return _MOTA;
            }
            set
            {
                OnMOTAChanging(value);
                ReportPropertyChanging("MOTA");
                _MOTA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MOTA");
                OnMOTAChanged();
            }
        }
        private global::System.String _MOTA;
        partial void OnMOTAChanging(global::System.String value);
        partial void OnMOTAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SOVENGUOILON
        {
            get
            {
                return _SOVENGUOILON;
            }
            set
            {
                if (_SOVENGUOILON != value)
                {
                    OnSOVENGUOILONChanging(value);
                    ReportPropertyChanging("SOVENGUOILON");
                    _SOVENGUOILON = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SOVENGUOILON");
                    OnSOVENGUOILONChanged();
                }
            }
        }
        private global::System.Int32 _SOVENGUOILON;
        partial void OnSOVENGUOILONChanging(global::System.Int32 value);
        partial void OnSOVENGUOILONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GIANGUOILON
        {
            get
            {
                return _GIANGUOILON;
            }
            set
            {
                if (_GIANGUOILON != value)
                {
                    OnGIANGUOILONChanging(value);
                    ReportPropertyChanging("GIANGUOILON");
                    _GIANGUOILON = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GIANGUOILON");
                    OnGIANGUOILONChanged();
                }
            }
        }
        private global::System.Double _GIANGUOILON;
        partial void OnGIANGUOILONChanging(global::System.Double value);
        partial void OnGIANGUOILONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SOVETREEM
        {
            get
            {
                return _SOVETREEM;
            }
            set
            {
                if (_SOVETREEM != value)
                {
                    OnSOVETREEMChanging(value);
                    ReportPropertyChanging("SOVETREEM");
                    _SOVETREEM = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SOVETREEM");
                    OnSOVETREEMChanged();
                }
            }
        }
        private global::System.Int32 _SOVETREEM;
        partial void OnSOVETREEMChanging(global::System.Int32 value);
        partial void OnSOVETREEMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GIATREEM
        {
            get
            {
                return _GIATREEM;
            }
            set
            {
                if (_GIATREEM != value)
                {
                    OnGIATREEMChanging(value);
                    ReportPropertyChanging("GIATREEM");
                    _GIATREEM = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GIATREEM");
                    OnGIATREEMChanged();
                }
            }
        }
        private global::System.Double _GIATREEM;
        partial void OnGIATREEMChanging(global::System.Double value);
        partial void OnGIATREEMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SOVETRENHO
        {
            get
            {
                return _SOVETRENHO;
            }
            set
            {
                if (_SOVETRENHO != value)
                {
                    OnSOVETRENHOChanging(value);
                    ReportPropertyChanging("SOVETRENHO");
                    _SOVETRENHO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SOVETRENHO");
                    OnSOVETRENHOChanged();
                }
            }
        }
        private global::System.Int32 _SOVETRENHO;
        partial void OnSOVETRENHOChanging(global::System.Int32 value);
        partial void OnSOVETRENHOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GIATRENHO
        {
            get
            {
                return _GIATRENHO;
            }
            set
            {
                if (_GIATRENHO != value)
                {
                    OnGIATRENHOChanging(value);
                    ReportPropertyChanging("GIATRENHO");
                    _GIATRENHO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GIATRENHO");
                    OnGIATRENHOChanged();
                }
            }
        }
        private global::System.Double _GIATRENHO;
        partial void OnGIATRENHOChanging(global::System.Double value);
        partial void OnGIATRENHOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SOVEEMBE
        {
            get
            {
                return _SOVEEMBE;
            }
            set
            {
                if (_SOVEEMBE != value)
                {
                    OnSOVEEMBEChanging(value);
                    ReportPropertyChanging("SOVEEMBE");
                    _SOVEEMBE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SOVEEMBE");
                    OnSOVEEMBEChanged();
                }
            }
        }
        private global::System.Int32 _SOVEEMBE;
        partial void OnSOVEEMBEChanging(global::System.Int32 value);
        partial void OnSOVEEMBEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GIAEMBE
        {
            get
            {
                return _GIAEMBE;
            }
            set
            {
                if (_GIAEMBE != value)
                {
                    OnGIAEMBEChanging(value);
                    ReportPropertyChanging("GIAEMBE");
                    _GIAEMBE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GIAEMBE");
                    OnGIAEMBEChanged();
                }
            }
        }
        private global::System.Double _GIAEMBE;
        partial void OnGIAEMBEChanging(global::System.Double value);
        partial void OnGIAEMBEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GIADAILY
        {
            get
            {
                return _GIADAILY;
            }
            set
            {
                if (_GIADAILY != value)
                {
                    OnGIADAILYChanging(value);
                    ReportPropertyChanging("GIADAILY");
                    _GIADAILY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GIADAILY");
                    OnGIADAILYChanged();
                }
            }
        }
        private global::System.Double _GIADAILY;
        partial void OnGIADAILYChanging(global::System.Double value);
        partial void OnGIADAILYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DONVITIEN
        {
            get
            {
                return _DONVITIEN;
            }
            set
            {
                if (_DONVITIEN != value)
                {
                    OnDONVITIENChanging(value);
                    ReportPropertyChanging("DONVITIEN");
                    _DONVITIEN = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DONVITIEN");
                    OnDONVITIENChanged();
                }
            }
        }
        private global::System.String _DONVITIEN;
        partial void OnDONVITIENChanging(global::System.String value);
        partial void OnDONVITIENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VANCHUYEN
        {
            get
            {
                return _VANCHUYEN;
            }
            set
            {
                if (_VANCHUYEN != value)
                {
                    OnVANCHUYENChanging(value);
                    ReportPropertyChanging("VANCHUYEN");
                    _VANCHUYEN = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VANCHUYEN");
                    OnVANCHUYENChanged();
                }
            }
        }
        private global::System.Boolean _VANCHUYEN;
        partial void OnVANCHUYENChanging(global::System.Boolean value);
        partial void OnVANCHUYENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean KHACHSAN
        {
            get
            {
                return _KHACHSAN;
            }
            set
            {
                if (_KHACHSAN != value)
                {
                    OnKHACHSANChanging(value);
                    ReportPropertyChanging("KHACHSAN");
                    _KHACHSAN = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KHACHSAN");
                    OnKHACHSANChanged();
                }
            }
        }
        private global::System.Boolean _KHACHSAN;
        partial void OnKHACHSANChanging(global::System.Boolean value);
        partial void OnKHACHSANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MAYBAY
        {
            get
            {
                return _MAYBAY;
            }
            set
            {
                if (_MAYBAY != value)
                {
                    OnMAYBAYChanging(value);
                    ReportPropertyChanging("MAYBAY");
                    _MAYBAY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MAYBAY");
                    OnMAYBAYChanged();
                }
            }
        }
        private global::System.Boolean _MAYBAY;
        partial void OnMAYBAYChanging(global::System.Boolean value);
        partial void OnMAYBAYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TRANGTHAI
        {
            get
            {
                return _TRANGTHAI;
            }
            set
            {
                if (_TRANGTHAI != value)
                {
                    OnTRANGTHAIChanging(value);
                    ReportPropertyChanging("TRANGTHAI");
                    _TRANGTHAI = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TRANGTHAI");
                    OnTRANGTHAIChanged();
                }
            }
        }
        private global::System.String _TRANGTHAI;
        partial void OnTRANGTHAIChanging(global::System.String value);
        partial void OnTRANGTHAIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DELSTAMP
        {
            get
            {
                return _DELSTAMP;
            }
            set
            {
                OnDELSTAMPChanging(value);
                ReportPropertyChanging("DELSTAMP");
                _DELSTAMP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DELSTAMP");
                OnDELSTAMPChanged();
            }
        }
        private Nullable<global::System.DateTime> _DELSTAMP;
        partial void OnDELSTAMPChanging(Nullable<global::System.DateTime> value);
        partial void OnDELSTAMPChanged();

        #endregion
    
    }

    #endregion
    
}
